# #+LaTeX_CLASS:  article
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage[usenames]{color}
#+LATEX_HEADER: \usepackage{pstricks}
#+LATEX_HEADER: \usepackage{pgfplots}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usepackage[europeanresistors,americaninductors]{circuitikz}
#+LATEX_HEADER: \usepackage{colortbl}
#+LATEX_HEADER: \usepackage{yfonts}
#+LATEX_HEADER: \usetikzlibrary{shapes,arrows}
#+LATEX_HEADER: \usetikzlibrary{positioning}
#+LATEX_HEADER: \usetikzlibrary{arrows,shapes}
#+LATEX_HEADER: \usetikzlibrary{intersections}
#+LATEX_HEADER: \usetikzlibrary{calc,patterns,decorations.pathmorphing,decorations.markings}
#+LATEX_HEADER: \usepackage[BoldFont,SlantFont,CJKchecksingle]{xeCJK}
#+LATEX_HEADER: \xeCJKsetup{CJKglue=\hspace{0pt plus .08 \baselineskip }}
#+LATEX_HEADER: \setCJKmainfont[BoldFont=Evermore Hei]{Evermore Kai}
#+LATEX_HEADER: \setCJKmonofont{Evermore Kai}

#+LATEX_HEADER: \usepackage{pst-node}
#+LATEX_HEADER: \usepackage{pst-plot}
#+LATEX_HEADER: \psset{unit=5mm}


#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [table]
# #+LaTeX_CLASS_OPTIONS: [bigger]
#+latex_header:  \mode<article>{\usepackage{beamerarticle}}
# #+latex_header: \mode<beamer>{\usetheme{JuanLesPins}}
# #+latex_header: \mode<beamer>{\usetheme{Boadilla}}
#+latex_header: \mode<beamer>{\usetheme{Frankfurt}}
#+latex_header: \mode<beamer>{\usecolortheme{dove}}
#+latex_header: \mode<article>{\hypersetup{colorlinks=true,pdfborder={0 0 0}}}
#+latex_header: \mode<beamer>{\AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}}
#+latex_header: \setbeamercovered{transparent}
#+BEAMER_FRAME_LEVEL: 3
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)

#+TITLE:  线性离散系统分析
#+latex_header: \subtitle{Z变换与离散系统数学模型}
#+AUTHOR:    
#+EMAIL: 
#+DATE:  
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:

* Z变换理论
** Z变换
*** Z变换定义
 * 采样信号  $e^*(t)$  的Laplacian变换  
      \[E^*(s)=\sum_{n=0}^{\infty}e(nT)e^{-nsT}\]
 * <2->令  $Z=e^{sT}$ ,则  
      \[e^{-nsT}=Z^{-n}\]
 * <3->得:  
      \[E(Z)=\sum_{n=0}^{\infty}e(nT)Z^{-n}\]
 * <3->记作  
      \[E(Z)={\cal Z}[e^*(t)]={\cal Z}[e(t)]\]
*** Z变换方法
   * 级数求合法
      * 按照Z变换的定义求解
   * 部分分式法:
      * 先求出  $e(t)$  的Laplacian变换  $E(s)$  ,将其展开成部分分式之和,使每部分对应的Z变换是已知的.
*** 级数求合法示例: 单位阶跃信号 $1(t)$
 * <2-> 解: 
      \begin{eqnarray*}
      e(nT)&=&1 , \\
      E(z) &=  &\sum_{n=0}^{\infty}e(nT)z^{-n} \\
       &=& \sum_{n=0}^{\infty}z^{-n} \\
      &=& \frac{1}{1-z^{-1}} \\
      &=& \frac{1}{z-1}
      \end{eqnarray*}
      其中  $\qquad |z^{-1}|<1$ 
*** 级数求合法示例: $\delta_T(t)=\sum_{n=0}^{\infty}\delta(t-nT)$
   * <2->解:
      \begin{eqnarray*}
      e^*(t) & = & \sum_{n=0}^{\infty}e(nT)\delta(t-nT) \\
       &=& \sum_{n=0}^{\infty}\delta(t-nT) \\
      e(nT) &=& 1\\
      E(z) &=& \sum_{n=0}^{\infty}z^{-n}\\
       &=& \frac{1}{1-z^{-1}} \\
      &=& \frac{z}{z-1}
      \end{eqnarray*}
      其中 $\qquad |z^{-1}|<1$ 
   * <3->$1(t)$  与  $\delta_T(t)$  对应的Z变换相同.
*** 部分分式法示例:  $E(s)=\frac{a}{s(s+a)}$ 
  * <2->解:
      \begin{eqnarray*}
      E(s) & = & \frac{1}{s}-\frac{1}{s+a}\\
      e(t) &=& 1-e^{-at} \\
      E(z) &=& \frac{1}{1-z^{-1}} -\frac{1}{1-z^{-1}e^{-aT}}
      \end{eqnarray*}
  *  <3->Z变换表:
      \[\begin{matrix}
      \delta(t) & 1 & 1 \\
      1(t) & \frac{1}{s} & \frac{1}{1-z^{-1}} \\
      t & \frac{1}{s^2} & \frac{Tz^{-1}}{(1-z^{-1})^2} \\
      e^{-at} & \frac{1}{s+a} &\frac{1}{1-e^{-aT}z^{-1}}
      \end{matrix}\]
*** Z变换性质
 * <2->线性定理:    ${\cal Z}[\alpha e_1(t)+\beta e_2(t)]=\alpha E_1(z)+\beta E_2(z)$ 
 * <3->实数位移定理:  ${\cal Z}[e(t+kT)] = z^k[E(z)-\sum_{n=0}^{k-1}e(nT)z^{-n}]$ 
 * <4->复数位移定理:  ${\cal Z}[e^{\pm at}e(t)] = E(ze^{\mp aT})$ 
 * <5->终值定理:  $\lim_{n\rightarrow\infty}e(nT)=\lim_{z\rightarrow 1}(1-z^{-1})E(z)$ 
 * <6->卷积定理: 若  $g(nT)=x(nT)*y(nT)$  则  $G(z)=X(z)Y(z)$  . ($x(nT)*y(nT)=\sum_{k=0}^{\infty}x(kT)y((n-k)T)$)
** Z反变换
*** Z反变换
  \[e(nT)={\cal Z}^{-1}[E(z)]\]
  * 幂级数展开法
  * 部分分式法
     * 展开成部分分式后查表
  * 反演积分法
*** 幂级数展开法
\begin{eqnarray*}
E(z) & = &\frac{b_0+b_1 z^{-1}+\cdots+b_m z^{-m}}{1+a_1 z^{-1}+\cdots+a_n z^{-n}} \\
 &=& c_0+c_1 z^{-1}+\cdots +c_n z^{-n} \\
 &=& \sum_{n=0}^{\infty}c_n z^{-n} \\
e^{*}(t) &=& \sum_{n=0}^{\infty}c_n\delta(t-nT) \\
e(nT) &=& c_n 
\end{eqnarray*}
*** 反演积分法
\begin{eqnarray*}
E(z) & = & \sum_{n=0}^{\infty}e(nT)z^{-n} \\
  &=& e(0)+e(T)z^{-1}+\cdots+e(nT)z^{-n}+\cdots \\
E(z)z^{n-1} &=& e(0)z^{n-1}+e(T)z^{n-2}+\cdots+e(nT)z^{-1}+\cdots \\
e(nT)&=& Res(E(z)z^{n-1})
\end{eqnarray*}
*** 反演积分法示例:  $E(z)=\frac{z^2}{(z-1)(z-0.5)}$  求  $e(nT)$ 
   * <2->解:
      \begin{eqnarray*}
      E(z)z^{n-1} & = &\frac{z^{n+1}}{(z-1)(z-0.5)} \\
      Res_1 &=& \lim_{z\rightarrow 1}\frac{(z-1)z^{n+1}}{(z-1)(z-0.5)} \\
         &=& 2 \\
      Res_2 &=& \lim_{z\rightarrow 0.5}\frac{(z-0.5)z^{n+1}}{(z-1)(z-0.5)} \\
         &=& -0.5^n \\
      e(nT) &=& Res_1+Res_2 \\
       &=& 2-0.5^n
      \end{eqnarray*}
* 离散系统数学模型
** 差分方程
*** 差分方程模型
  * <2->n阶后向差分方程
      \begin{eqnarray*}
       & &c(k)+a_1 c(k-1)+\cdots+a_n c(k-n) \\
       &=& b_0 r(k) +b_1 r(k-1) + \cdots + b_m r(k-m)
      \end{eqnarray*}
      即  $k$  时刻的输出  $c(k)$  与k时刻前  $n$  个时刻输出及前  $m$  个输入,当前时刻输入有关.
  * <3->n阶前向差分方程
      \begin{eqnarray*}
    & &  c(k+n)+a_1 c(k+n-1)+\cdots+a_n c(k) \\
    &=& b_0 r(k+m)+b_1 r(k+m-1)+\cdots+ b_m r(k)
      \end{eqnarray*}
*** 差分方程解法: 迭代法
  * 利用差分方程的递推关系,逐步计算  $c(k)$  的值
  * <2->例:  $c(k)=r(k)+5 c(k-1) -6 c(k-2)$  输入  $r(k)=1$ , 初始条件:  $c(0)=0,c(1)=1$  
  * <3->解:
      \begin{eqnarray*}
      c(2) & = & 6\\
      c(3) & =& 25 \\
      c(4) &=& 90
      \end{eqnarray*}
*** z变换法
  * 将差分方程与输入进行Z变换,得到输出的Z变换,再进行Z反变换.
  * <2->例: 差分方程  $c(t+2T)+3c(t+T)+2c(t)=0$  初始条件  $c(0)=0,c(1)=1$ 
  * <3->解:
      \begin{align*}
       &  z^2(c(z)-c(0)-c(1)z^{-1})+3z(c(z)-c(0))+2c(z)  =  0 \\
       &  (z^2+3z+2)c(z) = z \\
       &  c(z) = \frac{z}{z^2+3z+2} 
        =  \frac{z}{z+1}-\frac{z}{z+2}
        =  \frac{1}{1+z^{-1}}-\frac{1}{1+2z^{-1}}\\
       & c(k) = (-1)^k-(-2)^k
      \end{align*}
      其中  $k=0,1,2,\cdots$ 
** 脉冲传递函数
*** 脉冲传递函数定义
  * 连续系统:传递函数 (s域)
  * 离散系统:脉冲传递函数 (z域)
  * <2->定义:输出  $c^*(t)$   的Z变换与输入  $r^*(t)$  的Z变换之比(零初始条件下)叫做系统的脉冲传递函数.记为 
         \[G(z)=\frac{C(z)}{R(z)}\]
*** 脉冲传递函数意义
  * 加权序列: 输入  $r^*(t)=\delta(t)$  的输出序列称为加权序列,记为  $k^*(t)$ 
  * <2->脉冲传递函数: 
      \begin{eqnarray*}
      G(z) &=& \frac{{\cal Z}[k^*(t)]}{{\cal Z}[r^*(t)]} \\
      &=& {\cal Z}[k^*(t)]\\
      &=& k(z)
      \end{eqnarray*}
  * <3-> 脉冲传递函数为加权序列  $k^*(t)$  的Z变换
*** 两种模型之间的变换关系: 
      \begin{eqnarray*}
      c(nT)+\sum_{k=1}^n a_k c((n-k)T) &=& \sum_{k=0}^m b_k r((n-k)T) \\
      G(z) &=& \frac{\sum_{k=0}^{m}b_k z^{-k}}{1+\sum_{k=1}^n a_k z^{-k}}
      \end{eqnarray*}
    * <2-> 差分方程在零初始条件下进行Z变换,得脉冲传递函数.
*** 脉冲传递函数计算
 * 差分方程Z变换:  $G(z)=\frac{C(z)}{R(z)}$ 
 * 从传递函数  $G(s)$  求解(部分分式法)
 * <2->例:  $c(nT)=r[(n-k)T]$
 * <3->解:
      \begin{eqnarray*}
      C(z) &=& z^{-k}R(z) \\
      G(z) &=& \frac{C(z)}{R(z)} \\
        &=& z^{-k}
      \end{eqnarray*}
** 开环系统的脉冲传递函数
*** 开环系统脉冲传递函数
\mode<article>{按定义求,即:  $G(z)=\frac{{\cal Z} [c^*(t)]}{{\cal Z}[r^*(t)]}$ }
**** 结构图							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :END:
\begin{tikzpicture}[node distance=2.2em,auto,>=latex', thick] 
%\path[use as bounding box] (-1,0) rectangle (10,-2); 
\path[->] node[] (r) {$r(t)$}; 
%\path[->] node[ circle,inner sep=2pt,minimum size=1pt,draw,label=below left:$   $ ,right =of r] (p1) {}; 
%\path[->](r) edge node {} (p1) ; 
\path[->] node[minimum size=2em,right =of r] (s1) {}; 
\draw (s1.west)--(s1.north east);\draw[->] (s1.north west) arc (70:0:1.7em);\draw (s1.south) node {$T$};%\draw (s1.north) node[above] {$S$};
\path[](r) edge node[midway] {$   $} (s1) ; 
\path[red,->] node[draw, inner sep=5pt,right =of s1] (g1) {$G_1(s)$}; 
\path[->] (s1) edge node[midway] {$r^*(t)$} (g1); 
\path[->] node[minimum size=2em,right =of g1] (s2) {}; 
\draw (s2.west)--(s2.north east);\draw[->] (s2.north west) arc (70:0:1.7em);\draw (s2.south) node {$T$};%\draw (s2.north) node[above] {$S$};
\path[](g1) edge node[midway] {$d(t)$} (s2) ; 
\path[red,->] node[draw, inner sep=5pt,right =of s2] (g2) {$G_2(s)$}; 
\path[->] (s2) edge node[midway] {$d^*(t)$} (g2); 
\path[->] node[ right =of g2] (o) {$c(t)$}; 
\path[->] (g2) edge node {} (o); 
\path[->] node[minimum size=2em,above =of o] (sc) {}; 
\draw[dashed] (sc.west)--(sc.north east);\draw[dashed,->] (sc.north west) arc (70:0:1.7em);\draw[dashed] (sc.south) node {$T$};%\draw (sc.north) node[above] {$S$};
\path[dashed,draw](o.west)+(-1em,0) |- (sc.west) ; 
\path node[ right =of sc] (c) {$c^*(t)$}; 
\path[dashed,->] (sc) edge node {} (c); 
%\path[->, draw] (g.east)+(1em,0) -- +(1em,-3em) -| node[very near end] {$-$} (p1); 
\end{tikzpicture} 

**** 推导							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :BEAMER_envargs: <2->
     :END:
\begin{eqnarray*}
D(z) &=& R(z)G_1(z) \\
C(z) & = & D(z)G_2(z) 
       = G_1(z)G_2(z)R(z) \\
G(z) &=& G_1(z)G_2(z)
\end{eqnarray*}
*** 开环系统脉冲传递函数(续)
**** 结构图							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :END:
\begin{tikzpicture}[node distance=2.2em,auto,>=latex', thick] 
%\path[use as bounding box] (-1,0) rectangle (10,-2); 
\path[->] node[] (r) {$r(t)$}; 
%\path[->] node[ circle,inner sep=2pt,minimum size=1pt,draw,label=below left:$   $ ,right =of r] (p1) {}; 
%\path[->](r) edge node {} (p1) ; 
\path[->] node[minimum size=2em,right =of r] (s1) {}; 
\draw (s1.west)--(s1.north east);\draw[->] (s1.north west) arc (70:0:1.7em);\draw (s1.south) node {$T$};%\draw (s1.north) node[above] {$S$};
\path[](r) edge node[midway] {$   $} (s1) ; 
\path[red,->] node[draw, inner sep=5pt,right =of s1] (g1) {$G_1(s)$}; 
\path[->] (s1) edge node[midway] {$r^*(t)$} (g1); 
\path[red] node[draw, inner sep=5pt,right =of g1] (g2) {$G_2(s)$}; 
\path[->] (g1) edge node[midway] {$   $} (g2); 
\path[->] node[ right =of g2] (o) {$c(t)$}; 
\path[->] (g2) edge node {} (o); 
\path[->] node[minimum size=2em,above =of o] (sc) {}; 
\draw[dashed] (sc.west)--(sc.north east);\draw[dashed,->] (sc.north west) arc (70:0:1.7em);\draw[dashed] (sc.south) node {$T$};%\draw (sc.north) node[above] {$S$};
\path[dashed,draw](o.west)+(-1em,0) |- (sc.west) ; 
\path node[ right =of sc] (c) {$c^*(t)$}; 
\path[dashed,->] (sc) edge node {} (c); 
%\path[->, draw] (g.east)+(1em,0) -- +(1em,-3em) -| node[very near end] {$-$} (p1); 
\end{tikzpicture} 
**** 推导							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :BEAMER_envargs: <2->
     :END:
\begin{eqnarray*}
C^*(s) & = & [R^*(s)G_1(s)G_2(s)]^* 
       = R^*(s)[G_1(s)G_2(s)]^* \\
C(z) &=& R(z) G_1G_2(z) \\
G(z) &=& G_1G_2(z)
\end{eqnarray*}
*** 开环系统脉冲传递函数(续):有零阶保持器时:
**** 结构图							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :END:
\begin{tikzpicture}[node distance=2.2em,auto,>=latex', thick] 
%\path[use as bounding box] (-1,0) rectangle (10,-2); 
\path[->] node[] (r) {$r(t)$}; 
%\path[->] node[ circle,inner sep=2pt,minimum size=1pt,draw,label=below left:$   $ ,right =of r] (p1) {}; 
%\path[->](r) edge node {} (p1) ; 
\path[->] node[minimum size=2em,right =of r] (s1) {}; 
\draw (s1.west)--(s1.north east);\draw[->] (s1.north west) arc (70:0:1.7em);\draw (s1.south) node {$T$};%\draw (s1.north) node[above] {$S$};
\path[](r) edge node[midway] {$   $} (s1) ; 
\path[red,->] node[draw, inner sep=5pt,right =of s1] (g1) {$G_h(s)$}; 
\path[->] (s1) edge node[midway] {$r^*(t)$} (g1); 
\path[red] node[draw, inner sep=5pt,right =of g1] (g2) {$G_p(s)$}; 
\path[->] (g1) edge node[midway] {$   $} (g2); 
\path[->] node[ right =of g2] (o) {$c(t)$}; 
\path[->] (g2) edge node {} (o); 
\path[->] node[minimum size=2em,above =of o] (sc) {}; 
\draw[dashed] (sc.west)--(sc.north east);\draw[dashed,->] (sc.north west) arc (70:0:1.7em);\draw[dashed] (sc.south) node {$T$};%\draw (sc.north) node[above] {$S$};
\path[dashed,draw](o.west)+(-1em,0) |- (sc.west) ; 
\path node[ right =of sc] (c) {$c^*(t)$}; 
\path[dashed,->] (sc) edge node {} (c); 
%\path[->, draw] (g.east)+(1em,0) -- +(1em,-3em) -| node[very near end] {$-$} (p1); 
\end{tikzpicture} 
**** 推导							    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :BEAMER_envargs: <2->
     :END:
   * <2->   $C^*(s)  =  [R^*(s)\cdot \frac{1-e^{-Ts}}{s}\cdot G_p(s)]^*$
   * <3->   $C^*(s)  = R^*(s)[(1-e^{-Ts})\cdot\frac{G_p(s)}{s}]^*$
   * <4->   $C^*(s)  = R^*(s)[\frac{G_p(s)}{s}-e^{-Ts}\cdot\frac{G_p(s)}{s}]^*$
   * <5->   $C(z) = R(z){\cal Z}[\frac{G_p(z)}{s}]-z^{-1}{\cal Z}[\frac{G_p(z)}{s}]$
   * <6->   $G(z) = (1-z^{-1}){\cal Z}[\frac{G_p(z)}{s}]$
*** 开环系统脉冲传递函数示例:  $G_p(s)=\frac{a}{s(s+a)}$ 
  * <2->解:
      \begin{eqnarray*}
      G(z) & = &(1-z^{-1}){\cal Z}[\frac{a}{s^2(s+a)}] \\
       &=& (1-z^{-1}){\cal Z}[\frac{1}{s^2}-\frac{1}{a}(\frac{1}{s}-\frac{1}{s+a})] \\
       &=& (1-z^{-1})\left[\frac{Tz^{-1}}{(1-z^{-1})^2}-\frac{1}{a}(\frac{1}{1-z^{-1}}-\frac{1}{1-z^{-1}e^{-aT}} )\right]
      \end{eqnarray*}
** 闭环系统的脉冲传递函数
*** 闭环系统的脉冲传递函数
\mode<article>{按定义求:}

\begin{tikzpicture}[node distance=2.2em,auto,>=latex', thick] 
%\path[use as bounding box] (-1,0) rectangle (10,-2); 
\path[->] node[] (r) {$r(t)$}; 
\path[->] node[ circle,inner sep=2pt,minimum size=1pt,draw,label=below left:$   $ ,right =of r] (p1) {}; 
\path[->](r) edge node {} (p1) ; 
\path[->] node[minimum size=2em,right =of p1] (s1) {}; 
\draw (s1.west)--(s1.north east);\draw[->] (s1.north west) arc (70:0:1.7em);\draw (s1.south) node {$T$};%\draw (s1.north) node[above] {$S$};
\path[](p1) edge node[midway] {$e(t)$} (s1) ; 
%\path[red,->] node[draw, inner sep=5pt,right =of s1] (g1) {$G_h(s)$}; 
%\path[->] (s1) edge node[midway] {$r^*(t)$} (g1); 
\path[red] node[draw, inner sep=5pt,right =of s1] (g2) {$G(s)$}; 
\path[->] (s1) edge node[midway] {$e^*(t)$} (g2); 
\path[->] node[ right =of g2] (o) {$c(t)$}; 
\path[->] (g2) edge node {} (o); 
\path[->] node[minimum size=2em,above =of o] (sc) {}; 
\draw[dashed] (sc.west)--(sc.north east);\draw[dashed,->] (sc.north west) arc (70:0:1.7em);\draw[dashed] (sc.south) node {$T$};%\draw (sc.north) node[above] {$S$};
\path[dashed,draw](o.west)+(-1em,0) |- (sc.west) ; 
\path node[ right =of sc] (c) {$c^*(t)$}; 
\path[dashed,->] (sc) edge node {} (c); 
\path[red] node[draw, inner sep=5pt,below =of g2] (h) {$H(s)$}; 
\path[->,draw] (g2.east)+(1em,0) |- (h.east);
\path[->,draw] (h.west) -| node [very near end] {$-$} (p1);
%\path[->, draw] (g.east)+(1em,0) -- +(1em,-3em) -| node[very near end] {$-$} (p1); 
\path[->] node[minimum size=2em,above =of p1] (sr) {}; 
\draw[dashed] (sr.west)--(sr.north east);\draw[dashed,->] (sr.north west) arc (70:0:1.7em);\draw[dashed] (sr.south) node {$T$};%\draw (sr.north) node[above] {$S$};
\path[dashed,draw](r.east)+(1em,0) |- (sr.west) ; 
\path node[ right =of sr] (i) {$r^*(t)$}; 
\path[dashed,->] (sr) edge node {} (i); 
\end{tikzpicture} 

**** 脉冲传递函数					      :BMCOL:B_block:
     :PROPERTIES:
     :BEAMER_col: 0.5
     :BEAMER_env: block
     :BEAMER_envargs: <2->
     :END:
\begin{eqnarray*}
\Phi(z) & = & \frac{C(z)}{R(z)}
 = \frac{{\cal Z}[c^*(t)]}{{\cal Z}[r^*(t)]} \\
\Phi_e(z) & = & \frac{E(z)}{R(z)}
    = \frac{{\cal Z}[e^*(t)]}{{\cal Z}[r^*(t)]} 
\end{eqnarray*}
**** 解:						      :B_block:BMCOL:
     :PROPERTIES:
     :BEAMER_env: block
     :BEAMER_col: 0.5
     :BEAMER_envargs: <3->
     :END:
\begin{eqnarray*}
C(s) &=& G(s)E^*(s) \\
E(s) &=& R(s)-H(s)C(s) \\
     &=& R(s)-H(s)G(s)E^*(st) \\
\end{eqnarray*}
*** 闭环系统的脉冲传递函数(续)
\begin{eqnarray*}
C(s) &=& G(s)E^*(s) \\
E(s) &=& R(s)-H(s)C(s) \\
 &=& R(s)-H(s)G(s)E^*(st) \\
E^*(s) &=& R^*(s)-HG^*(s)E^*(s)\\
  &=& \frac{R^*(s)}{1+HG^*(s)} \\
\Phi_e(z) &=& \frac{1}{1+HG(z)} \\
C^*(s) &=& G^*(s)E^*(s)\\
 &=& \frac{G^*(s)R^*(s)}{1+HG^*(s)} \\
\Phi(z) &=& \frac{G(z)}{1+HG(z)} 
\end{eqnarray*}
*** 闭环系统的脉冲传递函数示例:

\begin{tikzpicture}[node distance=2.2em,auto,>=latex', thick] 
%\path[use as bounding box] (-1,0) rectangle (10,-2); 
\path[->] node[] (r) {$r(t)$}; 
\path[->] node[ circle,inner sep=2pt,minimum size=1pt,draw,label=below left:$   $ ,right =of r] (p1) {}; 
\path[->](r) edge node {} (p1) ; 
%\path[->] node[minimum size=2em,right =of p1] (s1) {}; 
%\draw (s1.west)--(s1.north east);\draw[->] (s1.north west) arc (70:0:1.7em);\draw (s1.south) node {$T$};%\draw (s1.north) node[above] {$S$};
%\path[](p1) edge node[midway] {$e(t)$} (s1) ; 
%\path[red,->] node[draw, inner sep=5pt,right =of s1] (g1) {$G_h(s)$}; 
%\path[->] (s1) edge node[midway] {$r^*(t)$} (g1); 
\path[red] node[draw, inner sep=5pt,right =of p1] (g2) {$G(s)$}; 
\path[->] (p1) edge node[midway] {$e(t)$} (g2); 
\path[->] node[minimum size=2em,right =of g2] (sc) {}; 
\draw (sc.west)--(sc.north east);\draw[->] (sc.north west) arc (70:0:1.7em);\draw (sc.south) node {$T$};%\draw (sc.north) node[above] {$S$};
\path (g2) edge node[midway] {$c(t)$} (sc); 
%\path[draw](o.west)+(-1em,0) |- (sc.west) ; 
%\path node[ right =of sc] (c) {$c^*(t)$}; 
%\path[dashed,->] (sc) edge node {} (c); 
\path[->] node[ right =of sc] (o) {$c^*(t)$}; 
\path[->] (sc) edge node {} (o); 

\path[red] node[draw, inner sep=5pt,below =of g2] (h) {$H(s)$}; 
\path[->,draw] (o.west)+(-1em,0) |- (h.east);
\path[->,draw] (h.west) -| node [very near end] {$-$} (p1);
%\path[->, draw] (g.east)+(1em,0) -- +(1em,-3em) -| node[very near end] {$-$} (p1); 
\path[->] node[minimum size=2em,above =of p1] (sr) {}; 
\draw[dashed] (sr.west)--(sr.north east);\draw[dashed,->] (sr.north west) arc (70:0:1.7em);\draw[dashed] (sr.south) node {$T$};%\draw (sr.north) node[above] {$S$};
\path[dashed,draw](r.east)+(1em,0) |- (sr.west) ; 
\path node[ right =of sr] (i) {$r^*(t)$}; 
\path[dashed,->] (sr) edge node {} (i); 
\end{tikzpicture} 

 * <2->解:
      \begin{eqnarray*}
      E(s) &=& R(s)-H(s)C^*(s)\\
      C(s) & = & G(s)E(s) 
          = G(s)R(s)-G(s)H(s)C^*(s)\\
      C^*(s) &=& GR^*(s)-GH^*(s)C^*(s)
             = \frac{GR^*(s)}{1+GH^*(s)C^*(s)}
      \end{eqnarray*}
 * <3->没有闭环脉冲传递函数
** Z变换局限性与修正Z变换
*** Z变换局限性
 * <2->采样间隔 $\tau$  要远小于系统最小时间常数
 * <3->c(nT)不能反映采样间隔中的信息
 * <4->G(s)要满足:  $n\geq m+2$  ,否则  $c^*(t)$  与  $c(t)$  差别较大.
*** 修正Z变换
 * 目的:求取采样间隔中的输出值
 * 原理:
    * <2->将周期为  $T$  的原输入采样信号序列 $r^*(t)$ 再次以周期  $\frac{T}{n}$  采样,即得:  $R'(z)=R(z^n)$ 
    * <3->计算在采样周期  $\frac{T}{n}$  下的响应,即得到原采样间隔中的值.
 * 方法:
    * <4->原输入信号Z变换为  $R(z)$ , 将 $z$  替换为:  $z^n$  .
    * <5->以  $\frac{T}{n}$ 重新计算系统脉冲传递函数.
**** $R(z)$ 						      :BMCOL:B_block:
     :PROPERTIES:
     :BEAMER_col: 0.5
     :BEAMER_env: block
     :END:
\begin{tikzpicture}[scale=0.5]
\begin{axis}[xticklabel=$\pgfmathprintnumber{\tick}T$]
\addplot+[ycomb] plot coordinates
    {(0,2) (1,1) (2,0.5) (3,4) (4,3) (5,2) (6,1.5) (7,1.5)};
\end{axis}
\end{tikzpicture}
**** $R(z^2)$,($T'=\frac{T}{2}$) 			      :BMCOL:B_block:
     :PROPERTIES:
     :BEAMER_col: 0.5
     :BEAMER_env: block
     :BEAMER_envargs: <2->
     :END:
\begin{tikzpicture}[scale=0.5]
\begin{axis}[ymin=0,xticklabel=$\pgfmathprintnumber{\tick}T$]
\addplot+[ycomb] plot coordinates
    {(0,2) (0.5, 0) (1,1) (1.5,0) (2,0.5)(2.5,0) (3,4)(3.5,0) (4,3)(4.5,0) (5,2)(5.5,0) (6,1.5)(6.5,0) (7,1.5)};
\end{axis}
\end{tikzpicture}
*** 修正Z变换示例:  
\[G(z)=\frac{z}{z-e^{-T}}\]
   $T=1$ ,  $r(t)=1(t)$ , 要求每采样周期中间插入两点.

  * 解:
      \begin{eqnarray*}
      G(z) &= & \frac{z}{z-e^{-1/3}} \\
      r(z) &=& \frac{1}{1-z^{-1}} \\
      r'(z) &=& r(z^3) \\
      &=& \frac{1}{1-z^{-3}} \\
      c'(z) &=& \frac{1}{1-z^{-1}e^{-1/3}}\cdot\frac{1}{1-z^{-3}}
      \end{eqnarray*}
